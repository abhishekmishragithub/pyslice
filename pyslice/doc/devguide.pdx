=include default_cfg.pdx
=cfg
title=pyslice Developer's Guide
toc_p=1
=end cfg
=include article_style.pdx

=head1 Overview
Pyslice is implemented in Python. Even though Python is available on several platforms, pyslice.py has only been tested on Linux.  As of pyslice.py 1.6, with the removal of 'os.fork', pyslice.py should work on Windows (untested).

=head1 Architecture
The overall process:
=list 1
  =item Parses pyslice.ini file.  'self.read_config()'
  =list *
    =item All quotes within strings in pyslice.ini are removed.  'self.dequote()'
    =item All paths are corrected to match the seperator of host machine.  'self.path_correction()'
    =end list
  =item Create cartesian of sets for variables specified in pyslice.conf. Now handled by PySPG.
  =item Asks user if number of runs is appropriate. If 'n' then bail.
  =item Loops on the sets in the cartesian.
  =list *
    =item Loops across all files in template directory.
    =list *
      =item Copy any binary files, continue to next file template directory. 'istext()'
      =item For across variable names in pyslice.ini for each line in the file.
      =list *
        =item Replace all 'keyword' 'Python statement containing variable name' 'keyword' with the evaluation of the Python statement, replacing variable name with correct number from cartesian set.
        =end list
      =item Write out new line to correct output directory and output file.
      =end list
    =item If number of thread is greater than max_processes, wait.
    =item Create new thread, use 'os.popen4' to pull output and error from the program and put in 'pyslice.log'.
    =end list
  =end list

